#include <WiFi.h>
#include <PubSubClient.h>
#include "DHT.h"

// WiFi
const char* ssid = "...";
const char* password = "...";

// MQTT Broker
const char* mqtt_server = "...";
const char* topic = "...";

// DHT
#define DHTPIN 4         // D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// WiFi + MQTT
WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  Serial.print("Connecting to WiFi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("WiFi connected.");
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Connecting to MQTT...");
    if (client.connect("ESP32Client")) {
      Serial.println("Connection successful.");
    } else {
      Serial.print("Lá»—i: ");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds...");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  dht.begin();
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  float h = dht.readHumidity();
  float t = dht.readTemperature();

  if (isnan(h) || isnan(t)) {
    Serial.println("Unable to read data from DHT11 sensor");
    return;
  }

  String payload = "{ \"temperature\": " + String(t) + ", \"humidity\": " + String(h) + " }";
  Serial.print("Send MQTT: ");
  Serial.println(payload);
  client.publish(topic, payload.c_str());

  delay(5000); 
}
